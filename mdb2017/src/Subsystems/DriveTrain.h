// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVETRAIN_H
#define DRIVETRAIN_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../Xbox360_Controller.h"

/**
 *
 *
 * @author ExampleAuthor
 */

enum DriveType
{
	DriveType_Arcade,
	DriveType_Tank,
	DriveType_Split,
	DriveType_end
};


class DriveTrain: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<CANTalon> left1;
	std::shared_ptr<CANTalon> left2;
	std::shared_ptr<CANTalon> right1;
	std::shared_ptr<CANTalon> right2;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	float  leftMotorOutput;
	float  rightMotorOutput;
	float  HighSpeed;
	float  LowSpeed;

	DriveType myType;


public:
	DriveTrain();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	void SetDriveType(DriveType type);
	void SetDrive(XBOX_AxisState axisState);

	void SetDrive_Arcade(float x, float y, bool highRate = false);
	void SetDrive_Tank(float left, float right, bool highRate = false);
	void SetDrive_Split(float turn, float throttle, bool highRate = false);
    void Stop();




	void Set_PositionMode();
	void Set_VoltageMode();
	float Limit(float num);



};

#endif
